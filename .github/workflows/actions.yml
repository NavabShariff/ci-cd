name: salary-api-build-pipeline

on:
  push:
    branches: ['main']


permissions:
  id-token: write
  contents: read  
# env:
#   SMTP_SERVER: smtp.yourdomain.com
#   SMTP_USERNAME: your@email.com
#   SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}

jobs:

  build:
    runs-on: ubuntu-latest
    # needs: clone
    container:
      image: maven:3.9-eclipse-temurin-17
      options: --user root
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          path: .

      - name: Build the Source Code
        run: |
          mvn clean package -DskipTests

      - name: Upload Source Code
        uses: actions/upload-artifact@v4
        with:
          name: source-code
          path: .


  sast:
    runs-on: ubuntu-latest
    needs: build
    container:
      image: sonarsource/sonar-scanner-cli:latest
      options: --user root
    steps:
    - name: Download source code
      uses: actions/download-artifact@v4
      with:
        name: source-code
        path: .

    - name: Scanning of compile code and send scanning report along with codecoverage report to SonarQube server
      run: |
        sonar-scanner \
          -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
          -Dsonar.projectName=${{ github.event.repository.name }} \
          -Dsonar.projectKey=${{ github.event.repository.name }} \
          -Dsonar.coverage.jacoco.xmlReportPaths=jacoco.xml \
          -Dsonar.sources=src/main/java \
          -Dsonar.tests=src/test/java \
          -Dsonar.java.binaries=target/classes \
          -Dsonar.qualitygate.wait=true

        



  notify-on-failure:
    runs-on: ubuntu-latest
    needs: [build, sast]
    if: failure() # this will trigger if *any* of the jobs fail
    steps:
      - name: Send Failure Notification Email
        uses: NavabShariff/shared-library/.github/actions/notification/send-failur-notification@main
        with:
          smtp_server: ${{ secrets.SMTP_SERVER }}
          smtp_username: ${{ secrets.SMTP_USERNAME }}
          smtp_password: ${{ secrets.SMTP_PASSWORD }}
          commit_author_name: ${{ github.event.pusher.name }}
          commit_author_email: ${{ github.event.pusher.email }}
          commit_message: ${{ github.event.head_commit.message }}
          commit_id: ${{ github.sha }}
          run_id: ${{ github.run_id }}